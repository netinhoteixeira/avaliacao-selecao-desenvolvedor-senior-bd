-- MySQL Script generated by MySQL Workbench
-- Sat Jun 26 01:35:28 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema avaliacao
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema avaliacao
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `avaliacao` DEFAULT CHARACTER SET utf8 ;
USE `avaliacao` ;

-- -----------------------------------------------------
-- Table `avaliacao`.`acesso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`acesso` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `usuario` VARCHAR(45) NOT NULL COMMENT 'Usuário',
  `senha` VARCHAR(45) NOT NULL COMMENT 'Senha',
  `administrador` BIT(1) NOT NULL COMMENT 'É administrador?',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Acessos';


-- -----------------------------------------------------
-- Table `avaliacao`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`cliente` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `nome` VARCHAR(100) NOT NULL COMMENT 'Nome',
  `cpf` CHAR(11) NOT NULL COMMENT 'Código de Pessoa Física',
  `endereco_cep` CHAR(8) NOT NULL COMMENT 'CEP do Endereço',
  `endereco_logradouro` VARCHAR(100) NOT NULL COMMENT 'Logradouro do Endereço',
  `endereco_complemento` VARCHAR(100) NULL COMMENT 'Complemento do Endereço',
  `endereco_bairro` VARCHAR(100) NOT NULL COMMENT 'Bairro do Endereço',
  `endereco_cidade` VARCHAR(100) NOT NULL COMMENT 'Cidade do Endereço',
  `endereco_uf` CHAR(2) NOT NULL COMMENT 'Unidade Federativa do Endereço',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Clientes';


-- -----------------------------------------------------
-- Table `avaliacao`.`cliente_telefone_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`cliente_telefone_tipo` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Nome',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tipos do Telefone do Cliente';


-- -----------------------------------------------------
-- Table `avaliacao`.`cliente_telefone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`cliente_telefone` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `cliente_id` BIGINT NOT NULL COMMENT 'Identificação do Cliente',
  `tipo_id` INT NOT NULL COMMENT 'Identificação do Tipo',
  `valor` VARCHAR(10) NOT NULL COMMENT 'Valor',
  PRIMARY KEY (`id`),
  INDEX `fk_cliente_telefone_cliente_idx` (`cliente_id` ASC) INVISIBLE,
  INDEX `fk_cliente_telefone_tipo_idx` (`tipo_id` ASC) INVISIBLE,
  CONSTRAINT `fk_cliente_telefone_cliente`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `avaliacao`.`cliente` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_cliente_telefone_tipo`
    FOREIGN KEY (`tipo_id`)
    REFERENCES `avaliacao`.`cliente_telefone_tipo` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Telefones do Cliente';


-- -----------------------------------------------------
-- Table `avaliacao`.`cliente_email`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`cliente_email` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `cliente_id` BIGINT NOT NULL COMMENT 'Identificação do Cliente',
  `valor` VARCHAR(150) NOT NULL COMMENT 'Valor',
  PRIMARY KEY (`id`),
  INDEX `fk_cliente_email_idx` (`cliente_id` ASC) VISIBLE,
  CONSTRAINT `fk_cliente_email`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `avaliacao`.`cliente` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'E-mails do Cliente';


-- -----------------------------------------------------
-- Table `avaliacao`.`acesso_registro_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`acesso_registro_tipo` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Nome',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tipos do Registro de Acesso';


-- -----------------------------------------------------
-- Table `avaliacao`.`acesso_registro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `avaliacao`.`acesso_registro` (
  `id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Identificação',
  `acesso_id` BIGINT NOT NULL COMMENT 'Indentificação do Acesso',
  `datahora` DATETIME NOT NULL COMMENT 'Data e hora',
  `tipo_id` BIGINT NOT NULL COMMENT 'Identificação do Tipo',
  `tabela` VARCHAR(100) NULL COMMENT 'Nome da tabela',
  `registro_id` BIGINT NULL COMMENT 'Identificação do registro da tabela',
  `descricao` TEXT NULL COMMENT 'Descrição',
  PRIMARY KEY (`id`),
  INDEX `fk_acesso_registro_idx` (`acesso_id` ASC) INVISIBLE,
  INDEX `fk_acesso_registro_acesso_tipo_idx` (`tipo_id` ASC) VISIBLE,
  CONSTRAINT `fk_acesso_registro`
    FOREIGN KEY (`acesso_id`)
    REFERENCES `avaliacao`.`acesso` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_acesso_registro_acesso_tipo`
    FOREIGN KEY (`tipo_id`)
    REFERENCES `avaliacao`.`acesso_registro_tipo` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Registros de Acesso';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `avaliacao`.`acesso`
-- -----------------------------------------------------
START TRANSACTION;
USE `avaliacao`;
INSERT INTO `avaliacao`.`acesso` (`id`, `usuario`, `senha`, `administrador`) VALUES (1, 'admin', '123456', 1);
INSERT INTO `avaliacao`.`acesso` (`id`, `usuario`, `senha`, `administrador`) VALUES (2, 'comum', '123456', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `avaliacao`.`cliente_telefone_tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `avaliacao`;
INSERT INTO `avaliacao`.`cliente_telefone_tipo` (`id`, `nome`) VALUES (1, 'Residencial');
INSERT INTO `avaliacao`.`cliente_telefone_tipo` (`id`, `nome`) VALUES (2, 'Comercial');
INSERT INTO `avaliacao`.`cliente_telefone_tipo` (`id`, `nome`) VALUES (3, 'Celular');

COMMIT;


-- -----------------------------------------------------
-- Data for table `avaliacao`.`acesso_registro_tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `avaliacao`;
INSERT INTO `avaliacao`.`acesso_registro_tipo` (`id`, `nome`) VALUES (1, 'Acesso');
INSERT INTO `avaliacao`.`acesso_registro_tipo` (`id`, `nome`) VALUES (2, 'Consulta');
INSERT INTO `avaliacao`.`acesso_registro_tipo` (`id`, `nome`) VALUES (3, 'Inserção');
INSERT INTO `avaliacao`.`acesso_registro_tipo` (`id`, `nome`) VALUES (4, 'Edição');
INSERT INTO `avaliacao`.`acesso_registro_tipo` (`id`, `nome`) VALUES (5, 'Remoção');

COMMIT;

